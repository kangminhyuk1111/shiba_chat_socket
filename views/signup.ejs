<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>회원가입</title>
    <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
    rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
    crossorigin="anonymous"
  />

  <script
    src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
    crossorigin="anonymous"
  ></script>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <link rel="stylesheet" href="/static/css/signin.css" />
  </head>
  <body>
    <div class="container-fluid">
      <section class="vh-100" style="background-color: #eee;">
        <div class="container h-100">
          <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-lg-12 col-xl-11">
              <div class="card text-black" style="border-radius: 25px;">
                <div class="card-body p-md-5"  id="signin-container">
                  <div class="row justify-content-center">
                    <div class="col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1">
      
                      <p class="text-center h1 fw-bold mb-4 mx-1 mx-md-4 mt-4">회원가입</p>
    
                      <form name="register">
                        <img src="/uploads/shiba-default.jpg" alt="profile" class="input-group-text" id="img-t" />              
                        
                        <div class="input-group mb-3">
                        <input type="file" name="signProfileImg" id="signProfileImg" onchange="fileUpload();" class="form-control" />
                        </div>

                        <div class="input-group mb-3">
                          <label class="input-group-text" for="signId" class="bg-warning">아이디</label>
                          <input type="text" name="signId" id="signId" class="form-control" required />
                        </div>

                        <div class="input-group mb-3">
                          <label class="input-group-text" for="signPw" class="bg-warning">비밀번호</label>
                          <input type="password" name="signPw" id="signPw" class="form-control" required />
                        </div>

                        <div class="input-group mb-3">
                          <label class="input-group-text" for="signNickname" class="bg-warning">닉네임</label>
                          <input type="text" name="signNickname" id="signNickname" class="form-control" required />
                        </div>
                        
                        
                        

                        <div class="btn-div">
                          <button type="button" class="btn btn-warning" onclick="registerUser();">회원가입</button>
                          <button type="button" class="btn btn-success" onclick="window.location.href = '/'">HOME</button>
                        </div>
                        
                      </form>
      
                    </div>
                    <div class="col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2">
                      <canvas id="canvas" width="2000" height="2000"></canvas>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </div>


    <script type="importmap">
      {
        "imports": {
          "three": "https://unpkg.com/three@0.141.0/build/three.module.js",
          "GLTFLoader": "https://unpkg.com/three@0.141.0/examples/jsm/loaders/GLTFLoader.js",
          "OrbitControls": "https://unpkg.com/three@0.142.0/examples/jsm/controls/OrbitControls.js"
        }
      }
    </script>

    <script type="module">
      import { GLTFLoader } from "GLTFLoader";
      import * as THREE from "three";
      import { OrbitControls } from "OrbitControls";

      let scene = new THREE.Scene();
      let renderer = new THREE.WebGLRenderer({
        canvas: document.querySelector("#canvas"),
        antialias: true,
      });
      renderer.outputEncoding = THREE.sRGBEncoding;

      let camera = new THREE.PerspectiveCamera(30, 1.3, 2, 1000);
      camera.position.set(0, 0, 5);
      scene.background = new THREE.Color("white");

      const controls = new OrbitControls(camera, renderer.domElement);
      controls.update();

      let loader = new GLTFLoader();
      loader.load("/static/shiba/scene.gltf", function (gltf) {
        scene.add(gltf.scene);

        function animate() {
          requestAnimationFrame(animate);
          const canvas = document.querySelector("#canvas");
          gltf.scene.rotation.y += 0.003;
          controls.update();
          renderer.render(scene, camera);
        }
        animate();
      });

      renderer.render(scene);
    </script>
    <script>
      const forms = document.forms["register"];
      const fileUpload = () => {
        const formData = new FormData();
        const fileInput = document.getElementById("signProfileImg");
        console.log(fileInput.files[0]);

        formData.append("dynamic-userfile", fileInput.files[0]);

        axios({
          url: "/signup/dynamicFile",
          method: "POST",
          data: formData,
          headers: {
            "Content-Type": "multipart/form-data", // enctype="multipart/form-data"
          },
        }).then((response) => {
          console.log(response);
          let img = document.querySelector("img");
          img.setAttribute("src", `/uploads/${response.data.filename}`);
        });
      };

      const registerUser = async () => {
          const imgSrc = document.querySelector("img").getAttribute("src");
          const formData = {
            signId: forms.signId.value,
            signPw: forms.signPw.value,
            signNickname: forms.signNickname.value,
            signProfileImg: imgSrc,
          };
          console.log(formData);
          if(formData.signId == "" || formData.signId == "" || formData.signNickname == ""){
            Swal.fire(
              '실패..',
              '공백은 허용하지 않습니다 !',
              'error'
            )
          return ;
        }
          const result = await axios({
            method: "POST",
            url: "/signup/registerUser",
            data: formData,
          });
          Swal.fire({
            title: '성공 !',
            text: '회원가입 성공 !',
            icon: 'success',
            confirmButtonColor: '#ffc107',
            confirmButtonText: 'OK'
        }).then(result => {
            if (result.isConfirmed == true) {
                window.location.href = '/';
            }
        })
    }
        
    </script>
  </body>
</html>
