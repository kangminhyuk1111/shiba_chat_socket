<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <script
      src="https://cdn.socket.io/4.6.0/socket.io.min.js"
      integrity="sha384-c79GN5VsunZvi+Q/WObgk2in0CbZsHnjEqvFxC5DxHn9lTfNce2WW6h2pH6u/kF+"
      crossorigin="anonymous"
    ></script>

    <script src="https://kit.fontawesome.com/380ea9da17.js" crossorigin="anonymous"></script>

    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
      crossorigin="anonymous"
    />

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
      crossorigin="anonymous"
    ></script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <link rel="stylesheet" href="/static/css/index.css" />

    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <title>chat</title>
  </head>
  <body>
    <div class="container-fluid">
      <h1>🐶시바 챗🐶</h1>
      <div class="row" id="main">
        <div class="col-1"></div>
        <div class="col-4 card">
          <canvas id="canvas" width="450" height="300"></canvas>
          <div class="login">
            <% if(!userid) { %>
            <div class="input-group mb-3">
              <span class="input-group-text" id="basic-addon1">ID</span>
              <input
                type="text"
                class="form-control"
                placeholder="아이디 입력"
                aria-label="Username"
                aria-describedby="basic-addon1"
                name="loginId"
                id="loginId"
              />
            </div>

            <div class="input-group mb-3">
              <span class="input-group-text" id="basic-addon2">PW</span>
              <input
                type="password"
                class="form-control"
                placeholder="비밀번호 입력"
                aria-label="Recipient's username"
                aria-describedby="basic-addon2"
                name="loginPw"
                id="loginPw"
              />
            </div>
            <button
              class="btn btn-warning"
              onclick="window.location.href = '/signup'"
            >
              회원가입
            </button>
            <button class="btn btn-warning" onclick="userData();">
              로그인
            </button>
            <% } else { %>
              <div class="login-bottom">

              </div>
            <button type="button" onclick="logout();" class="btn btn-warning" data-trigger="hover" data-container="body" data-toggle="popover" data-placement="top" data-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">
              로그아웃
            </button>
            <button button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#exampleModal">
              프로필보기
            </button>
            <% } %>
            
          </div>
        </div>
        <div class="col-6 card">
          <div class="row h-100" id="justify-center">
            <div class="col-3 h-set">
              <p class="fw-700">✅유저목록❌</p>
              <div class="all-user-div">
                <img src="/uploads/shiba-default.jpg" id="all-user-div-img" />
                <div class="nickname">nickname</div>
                <div class="live-perform"> ✅ </div>
              </div>
            </div>
            <div class="col-8 h-100">
              <div class="entry-box input-gruop w-50 m-auto d-flex">
                <input
                  type="text"
                  id="nickname"
                  placeholder="닉네임 (익명 가능)"
                  value="<%= userid %>"
                  class="form-control w-75"
                />
                <button
                  type="button"
                  onclick="entry();"
                  class="btn btn-warning w-25 form-control"
                >
                  입장
                </button>
              </div>

              <div class="chat-box d-none">
                <div id="chat-list" class="chat-list">
                  <p id="user-count"></p>
                </div>
                <div class="input-group w-50 m-auto">
                  <select id="nick-list" class="form-control w-25"></select>
                  <input type="text" id="message" class="form-control w-50" onkeypress="if( event.keyCode == 13 ){sendMsg();}"/>
                  <button
                    type="button"
                    onclick="sendMsg();"
                    class="btn btn-warning w-25"
                    
                  >
                    전송
                  </button>
                </div>
              </div>
              <p id="form-server"></p>
            </div>
          </div>
        </div>
        <div class="col-1"></div>
      </div>
      <div class="row" id="footer">
        <div class="col"></div>
        <div class="col"></div>
      </div>
    </div>

    <!-- 모달창 -->
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">프로필 보기🐶</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <form>
              <div class="mb-3 mb-3-div">
                <img src="/uploads/shiba-default.jpg" id="modalUserImg"/>
              </div>
              <div class="mb-3">
                <label for="recipient-name" class="col-form-label">닉네임</label>
                <input type="text" class="form-control" id="modalUserNick">
              </div>
              <div class="mb-3">
                <label for="recipient-name" class="col-form-label">아이디</label>
                <input type="text" class="form-control" id="modalUserId">
              </div>
              <div class="mb-3">
                <label for="recipient-name" class="col-form-label">비밀번호</label>
                <input type="text" class="form-control" id="modalUserPw">
              </div>
            </form>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-warning" onclick="modifyProfile();">수정하기</button>
          </div>
        </div>
      </div>
    </div>

    <!-- 채팅창 입장 안내 문구 socket.id -> nickname -->

    <script>


      const openModal = () => {
          Swal.fire({
          title: '익명으로 로그인없이 채팅 가능합니다!',
          showDenyButton: true,
          confirmButtonText: '네!',
          denyButtonText: `오늘 하루 그만보기`,
        }).then((result) => {
          /* Read more about isConfirmed, isDenied below */
          if (result.isConfirmed) {
            return ;
          } else if (result.isDenied) {
            setCookie("mycookie", 'popupEnd', 1);
            Swal.fire('비속어 금지~', '', 'success')
          }
        })
      }

      let checkCookie = getCookie("mycookie");

      if(checkCookie == 'popupEnd') {
        console.log('illegal')
      } else {
        openModal();
      }
      function setCookie(name, value, expiredays){
          var today = new Date();
          today.setDate(today.getDate() + expiredays);
          document.cookie = name + '=' + escape(value) + '; expires=' + today.toGMTString();
      }

      function getCookie(name) {
          var cookie = document.cookie;
          if (document.cookie != "") {
              var cookie_array = cookie.split("; ");
              for ( var index in cookie_array) {
                  var cookie_name = cookie_array[index].split("=");
                  if (cookie_name[0] == "mycookie") {
                      return cookie_name[1];
                  }
              }
          }
          return;
      }

      
      let allUsers = '<%- JSON.stringify(userInfo) %>';
      allUsers = (JSON.parse(allUsers));
      const col3 = document.querySelector('.col-3');
      const loginDiv = document.querySelector('.login-bottom')
      console.log(allUsers)
      for(let i = 0; i < allUsers.length; i++){
        const div = document.createElement('div');
        const div2 = document.createElement('div');
        const div3 = document.createElement('div');
        const img = document.createElement('img');
        div.setAttribute('class','all-user-div');
        img.setAttribute('src',allUsers[i].profileImg);
        img.setAttribute('id','all-user-div-img');
        div2.setAttribute('class','nickname');
        div3.setAttribute('class','live-perform');
        div2.innerText = allUsers[i].nickname;
        div3.innerText = '✅';
        div.append(img);
        div.append(div2);
        div.append(div3);
        col3.append(div);
      }

      let localUser = '<%= userid %>';
      let localUserFinder = allUsers.find(e => e.userid == localUser);
      const localUserProfile = `<div class='local-profile-img'>
        <img src='${localUserFinder.profileImg}' id='profile-img2' class='profile-img-left' data-bs-toggle="modal" data-bs-target="#exampleModal"/>
        </div>`;
      loginDiv.innerHTML = localUserProfile

      const modalImg = document.querySelector('#modalUserImg')
      const modalNick = document.querySelector('#modalUserNick');
      const modalId = document.querySelector('#modalUserId');
      const modalPw = document.querySelector('#modalUserPw');

      modalImg.setAttribute('src',localUserFinder.profileImg);
      modalNick.setAttribute('value',localUserFinder.nickname)
      modalId.setAttribute('value',localUserFinder.userid)
      modalPw.setAttribute('value',localUserFinder.userpw)

      const modifyProfile = async () => {
        const result = await axios({
          method :'POST',
          url : '/modifyProfile',
          data : {
            defaultId : localUserFinder.userid,
            nickname : modalNick.value,
            userid : modalId.value,
            userpw: modalPw.value,
          }
        })
        if(result.data == true){
          Swal.fire({
            title: '수정 성공 !',
            text: '다시 로그인 하세요😊',
            icon: 'success',
            confirmButtonColor: '#ffc107',
            confirmButtonText: 'OK'
        }).then(result => {
            if (result.isConfirmed == true) {
              console.log('!@#!')
                axios.post({
                  method: 'POST',
                  url: '/logout',
                  data: true,
                })
                  window.location.href = '/'
            }
        })
        }
      }

      document.querySelector('#profile-img2').addEventListener('mouseover',()=>{
        document.querySelector('.d-none').style.display = 'block';
      })
    </script>
    <script src="/static/js/index.js"></script>
    <script type="importmap">
      {
        "imports": {
          "three": "https://unpkg.com/three@0.141.0/build/three.module.js",
          "GLTFLoader": "https://unpkg.com/three@0.141.0/examples/jsm/loaders/GLTFLoader.js",
          "OrbitControls": "https://unpkg.com/three@0.142.0/examples/jsm/controls/OrbitControls.js"
        }
      }
    </script>

    <script type="module">
      import { GLTFLoader } from "GLTFLoader";
      import * as THREE from "three";
      import { OrbitControls } from "OrbitControls";

      let scene = new THREE.Scene();
      let renderer = new THREE.WebGLRenderer({
        canvas: document.querySelector("#canvas"),
        antialias: true,
      });
      renderer.outputEncoding = THREE.sRGBEncoding;

      let camera = new THREE.PerspectiveCamera(30, 1.3, 2, 1000);
      camera.position.set(0, 0, 5);
      scene.background = new THREE.Color("white");

      const controls = new OrbitControls(camera, renderer.domElement);
      controls.update();

      let loader = new GLTFLoader();
      loader.load("/static/shiba/scene.gltf", function (gltf) {
        scene.add(gltf.scene);

        function animate() {
          requestAnimationFrame(animate);
          const canvas = document.querySelector("#canvas");
          gltf.scene.rotation.y += 0.003;
          controls.update();
          renderer.render(scene, camera);
        }
        animate();
      });

      renderer.render(scene);
    </script>
  </body>
</html>
